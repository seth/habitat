syntax = "proto2";

package vault;

message Origin {
  required uint64 id = 1;
  required string name = 2;
  required uint64 owner_id = 3;
  optional string private_key_name = 4;
}

message OriginCreate {
  required string name = 1;
  required uint64 owner_id = 2;
  required string owner_name = 3;
}

message OriginDelete {
  required string name = 1;
}

message OriginGet {
  required string name = 1;
}

message OriginMemberRemove {
  required uint64 origin_id = 1;
  required uint64 user_id = 2;
}

message OriginMemberListRequest {
  required uint64 origin_id = 1;
}

message OriginMemberListResponse {
  required uint64 origin_id = 1;
  repeated string members = 2;
}

message AccountOriginListRequest {
  required uint64 account_id = 1;
}

message AccountOriginListResponse {
  required uint64 account_id = 1;
  repeated string origins = 2;
}

message CheckOriginAccessRequest {
  oneof account_info {
    uint64 account_id = 1;
    string account_name = 2;
  }
  oneof origin_info {
    uint64 origin_id = 3;
    string origin_name = 4;
  }
}

message CheckOriginAccessResponse {
  required bool has_access = 1;
}

message AccountInvitationListRequest {
  required uint64 account_id = 1;
}

message AccountInvitationListResponse {
  required uint64 account_id = 1;
  repeated OriginInvitation invitations = 2;
}

message OriginInvitationListRequest {
  required uint64 origin_id = 1;
}

message OriginInvitationListResponse {
  required uint64 origin_id = 1;
  repeated OriginInvitation invitations = 2;
}

message OriginInvitation {
  required uint64 id = 1;
  required uint64 account_id = 2;
  required string account_name = 3;
  required uint64 origin_id = 4;
  required string origin_name = 5;
  required uint64 owner_id = 6;
}

message OriginInvitationCreate {
  required uint64 account_id = 1;
  required string account_name = 2;
  required uint64 origin_id = 3;
  required string origin_name = 4;
  required uint64 owner_id = 5;
}

message OriginInvitationAcceptRequest {
  required uint64 account_accepting_request = 1;
  required uint64 invite_id = 2;
  required bool ignore = 3;
}

message OriginInvitationAcceptResponse { }

message OriginSecretKey {
  required uint64 id = 1;
  required uint64 origin_id = 2;
  required string name = 3;
  required string revision = 4;
  required bytes body = 5;
  required uint64 owner_id = 6;
}

message OriginSecretKeyCreate {
  required uint64 origin_id = 1;
  required string name = 2;
  required string revision = 3;
  required bytes body = 4;
  required uint64 owner_id = 5;
}

message OriginSecretKeyGet {
  required uint64 owner_id = 1;
  required string origin = 2;
}

enum ProjectState {
  Ok = 0;
  BadPlan = 1;
  OriginNameMismatch = 2;
  MissingPlan = 3;
  BadConfig = 4;
}

message Project {
  required string id = 1;
  required uint64 owner_id = 2;
  required string plan_path = 3;
  optional ProjectState state = 5;
  oneof vcs {
    VCSGit git = 4;
  }
}

message ProjectStateSet {
  required string id = 1;
  required ProjectState state = 2;
}

message ProjectUpdate {
  required uint64 requestor_id = 1;
  required Project project = 2;
}

message ProjectCreate {
  required Project project = 1;
}

message ProjectDelete {
  required string id = 1;
  required uint64 requestor_id = 2;
}

message ProjectGet {
  required string id = 1;
}

message ProjectAssociate {
  required ProjectSearchKey key = 1;
  required string term = 2;
  required Project project = 3;
}

message ProjectDisassociate {
  required ProjectSearchKey key = 1;
  required string term = 2;
  required string project_id = 3;
}

message ProjectSearch {
  required ProjectSearchKey key = 1;
  required string term = 2;
}

enum ProjectSearchKey {
  GitHubFullName = 0;
}

message ProjectSet {
  repeated Project projects = 1;
}

message VCSGit {
  required string url = 1;
}
